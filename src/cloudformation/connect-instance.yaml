AWSTemplateFormatVersion: "2010-09-09"

Description: Amazon Connect Instance Infrastructure

Parameters:
  pEnvironment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - sit
      - preprod
      - prod
  pConnectInstanceName:
    Type: String
    Description: Exclude Region/Environment, Max length of 10
    MinLength: 3
    MaxLength: 10
    AllowedPattern: (?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)
  pConnectInstanceAttributeAutoResolveBestVoices:
    Type: String
    Description: Automatically utilise the best voice instead of standard Polly
    Default: True
    AllowedValues:
      - True
      - False
  pConnectInstanceAttributeContactFlowLogs:
    Type: String
    Description: Enable Contact Flow logs for this instance
    Default: True
    AllowedValues:
      - True
      - False

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Environment
      Parameters:
      - pEnvironment
    - Label:
        default: Amazon Connect
      Parameters:
      - pConnectInstanceName
      - pConnectInstanceAttributeAutoResolveBestVoices
      - pConnectInstanceAttributeContactFlowLogs
    ParameterLabels:
      pEnvironment:
        default: Environment
      pConnectInstanceName:
        default: Connect Instance Name
      pConnectInstanceAttributeAutoResolveBestVoices:
        default: Auto Resolve Best Voices
      pConnectInstanceAttributeContactFlowLogs:
        default: Enable Contact Flow Logs

Resources:
# Storage of Call Recording/Chat Transcripts/Scheduled Reports #
## KMS Keys for Amazon Connect to use when storing objects in S3 ##
  rKMSKeyAmazonConnectCallRecordings:
    Type: AWS::KMS::Key
    Properties:
      Description: "S3 Bucket KMS Key for Call Recordings"
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: "*"
        - Sid: Allow access through Connect for all principals in the account that are authorized
            to use Connect
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:CreateGrant
          - kms:Describe*
          - kms:Get*
          - kms:List*
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref "AWS::AccountId"
              kms:ViaService: !Sub connect.${AWS::Region}.amazonaws.com
        - Sid: Allow Connect to directly describe the key
          Effect: Allow
          Principal:
            Service: connect.amazonaws.com
          Action:
          - kms:Describe*
          - kms:Get*
          - kms:List*
          Resource: "*"
        - Sid: Allow direct access to key metadata to the account
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action:
          - kms:Describe*
          - kms:Get*
          - kms:List*
          - kms:RevokeGrant
          Resource: "*"
        - Sid: Allow access through S3 for all principals in the account that are authorized
            to use S3
          Effect: Allow
          Principal:
            AWS: "*"
          Action: kms:Decrypt
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref "AWS::AccountId"
              kms:ViaService: !Sub s3.${AWS::Region}.amazonaws.com
        - Sid: Restrict direct usage
          Effect: Deny
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:GenerateDataKey*
          - kms:ReEncrypt*
          Resource: "*"
          Condition:
            'Null':
              kms:ViaService: 'true'
        - Sid: Restrict usage to Connect data
          Effect: Deny
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:GenerateDataKey*
          - kms:ReEncrypt*
          Resource: "*"
          Condition:
            'Null':
              kms:EncryptionContext:aws:connect:OrganizationId: 'true'
  rKMSKeyAmazonConnectChatTranscripts:
    Type: AWS::KMS::Key
    Properties:
      Description: "S3 Bucket KMS Key for Chat Transcripts"
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: "*"
        - Sid: Allow access through Connect for all principals in the account that are authorized
            to use Connect
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:CreateGrant
          - kms:Describe*
          - kms:Get*
          - kms:List*
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref "AWS::AccountId"
              kms:ViaService: !Sub connect.${AWS::Region}.amazonaws.com
        - Sid: Allow Connect to directly describe the key
          Effect: Allow
          Principal:
            Service: connect.amazonaws.com
          Action:
          - kms:Describe*
          - kms:Get*
          - kms:List*
          Resource: "*"
        - Sid: Allow direct access to key metadata to the account
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action:
          - kms:Describe*
          - kms:Get*
          - kms:List*
          - kms:RevokeGrant
          Resource: "*"
        - Sid: Allow access through S3 for all principals in the account that are authorized
            to use S3
          Effect: Allow
          Principal:
            AWS: "*"
          Action: kms:Decrypt
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref "AWS::AccountId"
              kms:ViaService: !Sub s3.${AWS::Region}.amazonaws.com
        - Sid: Restrict direct usage
          Effect: Deny
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:GenerateDataKey*
          - kms:ReEncrypt*
          Resource: "*"
          Condition:
            'Null':
              kms:ViaService: 'true'
        - Sid: Restrict usage to Connect data
          Effect: Deny
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:GenerateDataKey*
          - kms:ReEncrypt*
          Resource: "*"
          Condition:
            'Null':
              kms:EncryptionContext:aws:connect:OrganizationId: 'true'
  rKMSKeyAmazonConnectScheduledReports:
    Type: AWS::KMS::Key
    Properties:
      Description: "S3 Bucket KMS Key for Scheduled Reports"
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: "*"
        - Sid: Allow access through Connect for all principals in the account that are authorized
            to use Connect
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:CreateGrant
          - kms:Describe*
          - kms:Get*
          - kms:List*
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref "AWS::AccountId"
              kms:ViaService: !Sub connect.${AWS::Region}.amazonaws.com
        - Sid: Allow Connect to directly describe the key
          Effect: Allow
          Principal:
            Service: connect.amazonaws.com
          Action:
          - kms:Describe*
          - kms:Get*
          - kms:List*
          Resource: "*"
        - Sid: Allow direct access to key metadata to the account
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action:
          - kms:Describe*
          - kms:Get*
          - kms:List*
          - kms:RevokeGrant
          Resource: "*"
        - Sid: Allow access through S3 for all principals in the account that are authorized
            to use S3
          Effect: Allow
          Principal:
            AWS: "*"
          Action: kms:Decrypt
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref "AWS::AccountId"
              kms:ViaService: !Sub s3.${AWS::Region}.amazonaws.com
        - Sid: Restrict direct usage
          Effect: Deny
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:GenerateDataKey*
          - kms:ReEncrypt*
          Resource: "*"
          Condition:
            'Null':
              kms:ViaService: 'true'
        - Sid: Restrict usage to Connect data
          Effect: Deny
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:GenerateDataKey*
          - kms:ReEncrypt*
          Resource: "*"
          Condition:
            'Null':
              kms:EncryptionContext:aws:connect:OrganizationId: 'true'

## KMS Key Aliases ##
  rKeyAliasAmazonConnectCallRecordings:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/connect-${pEnvironment}-${pConnectInstanceName}-callrecordings'
      TargetKeyId: !Ref rKMSKeyAmazonConnectCallRecordings
  rKeyAliasAmazonConnectChatTranscripts:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/connect-${pEnvironment}-${pConnectInstanceName}-chattranscripts'
      TargetKeyId: !Ref rKMSKeyAmazonConnectChatTranscripts
  rKeyAliasAmazonConnectScheduledReports:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/connect-${pEnvironment}-${pConnectInstanceName}-scheduledreports'
      TargetKeyId: !Ref rKMSKeyAmazonConnectScheduledReports

## S3 Buckets for Amazon Connect Objects ##
  rS3BucketAmazonConnectCallRecordings:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-callrecordings'
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
  rS3BucketAmazonConnectChatTranscripts:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-chattranscripts'
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
  rS3BucketAmazonConnectScheduledReports:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-scheduledreports'
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

## S3 Bucket Policies for Amazon Connect Objects ##
  rS3BucketPolicyAmazonConnectCallRecordings:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref rS3BucketAmazonConnectCallRecordings
      PolicyDocument:
        Statement:
        - Sid: AllowAccess
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Service:
              - connect.amazonaws.com
          Action:
            - s3:Get*
            - s3:List*
            - s3:Put*
          Resource:
            - !Sub ${rS3BucketAmazonConnectCallRecordings.Arn}/CALL_RECORDINGS/*
  rS3BucketPolicyAmazonConnectChatTranscripts:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref rS3BucketAmazonConnectChatTranscripts
      PolicyDocument:
        Statement:
        - Sid: AllowAccess
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Service:
              - connect.amazonaws.com
          Action:
            - s3:Get*
            - s3:List*
            - s3:Put*
          Resource:
            - !Sub ${rS3BucketAmazonConnectChatTranscripts.Arn}/CHAT_TRANSCRIPTS/*
  rS3BucketPolicyAmazonConnectScheduledReports:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref rS3BucketAmazonConnectScheduledReports
      PolicyDocument:
        Statement:
        - Sid: AllowAccess
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Service:
              - connect.amazonaws.com
          Action:
            - s3:Get*
            - s3:List*
            - s3:Put*
          Resource:
            - !Sub ${rS3BucketAmazonConnectScheduledReports.Arn}/SCHEDULED_REPORTS/*

# Streaming/Storage of Contact Trace Records and Agent Events Streams #
## S3 Buckets for Amazon Connect Objects ##
  rS3BucketAmazonConnectContactTraceRecords:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-contacttracerecords'
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
  rS3BucketAmazonConnectAgentEvents:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-agentevents'
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

## S3 Bucket Policies for Amazon Connect Objects ##
  rS3BucketPolicyAmazonConnectContactTraceRecords:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref rS3BucketAmazonConnectContactTraceRecords
      PolicyDocument:
        Statement:
        - Sid: AllowAccess
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Service:
              - firehose.amazonaws.com
          Action:
            - s3:Get*
            - s3:List*
            - s3:Put*
          Resource:
            - !Sub ${rS3BucketAmazonConnectContactTraceRecords.Arn}/CONTACT_TRACE_RECORDS/*
  rS3BucketPolicyAmazonConnectAgentEvents:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref rS3BucketAmazonConnectAgentEvents
      PolicyDocument:
        Statement:
        - Sid: AllowAccess
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Service:
              - firehose.amazonaws.com
          Action:
            - s3:Get*
            - s3:List*
            - s3:Put*
          Resource:
            - !Sub ${rS3BucketAmazonConnectAgentEvents.Arn}/AGENT_EVENTS/*

## KMS Keys for Kinesis to use ##
  rKMSKeyKinesisAmazonConnectContactTraceRecords:
    Type: AWS::KMS::Key
    Properties:
      Description: "Kinesis KMS Key for Amazon Connect Contact Trace Records"
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: "*"
        - Sid: Allow access through Amazon Kinesis for all principals in the account that
            are authorized to use Amazon Kinesis
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: "*"
          Condition:
            StringEquals:
              kms:ViaService: !Sub kinesis.${AWS::Region}.amazonaws.com
              kms:CallerAccount: !Ref "AWS::AccountId"
  rKMSKeyKinesisAmazonConnectAgentEvents:
    Type: AWS::KMS::Key
    Properties:
      Description: "Kinesis KMS Key for Amazon Connect Agent Events"
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: "*"
        - Sid: Allow access through Amazon Kinesis for all principals in the account that
            are authorized to use Amazon Kinesis
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: "*"
          Condition:
            StringEquals:
              kms:ViaService: !Sub kinesis.${AWS::Region}.amazonaws.com
              kms:CallerAccount: !Ref "AWS::AccountId"
  rKMSKeyKinesisFirehoseAmazonConnectContactTraceRecords:
    Type: AWS::KMS::Key
    Properties:
      Description: "Kinesis Firehose KMS Key for Amazon Connect Contact Trace Records"
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: "*"
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: "*"
  rKMSKeyKinesisFirehoseAmazonConnectAgentEvents:
    Type: AWS::KMS::Key
    Properties:
      Description: "Kinesis KMS Key for Amazon Connect Agent Events"
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: "*"
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: "*"

## KMS Key Aliases for Kinesis Streams ##
  rKeyAliasKinesisAmazonConnectContactTraceRecords:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/kinesisstream-${pEnvironment}-${pConnectInstanceName}-ContactTraceRecords'
      TargetKeyId: !Ref rKMSKeyKinesisAmazonConnectContactTraceRecords
  rKeyAliasKinesisAmazonConnectAgentEvents:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/kinesisstream-${pEnvironment}-${pConnectInstanceName}-agentevents'
      TargetKeyId: !Ref rKMSKeyKinesisAmazonConnectAgentEvents

## Kinesis Streams ##
  rKinesisStreamAmazonConnectContactTraceRecords:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-contacttracerecords'
      RetentionPeriodHours: 24
      StreamEncryption:
        EncryptionType: KMS
        KeyId: !GetAtt 'rKMSKeyKinesisAmazonConnectContactTraceRecords.Arn'
      StreamModeDetails:
        StreamMode: ON_DEMAND
  rKinesisStreamAmazonConnectAgentEvents:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-agentevents'
      RetentionPeriodHours: 24
      StreamEncryption:
        EncryptionType: KMS
        KeyId: !GetAtt 'rKMSKeyKinesisAmazonConnectAgentEvents.Arn'
      StreamModeDetails:
        StreamMode: ON_DEMAND

## IAM Polices for Kinesis Firehose Roles ##
  rIAMManagedPolicyAmazonConnectContactTraceRecords:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-contacttracerecords-s3'
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload,
              - s3:GetBucketLocation,
              - s3:GetObject,
              - s3:ListBucket,
              - s3:ListBucketMultipartUploads,
              - s3:PutObject
            Resource: 
              - !Sub ${rS3BucketAmazonConnectContactTraceRecords.Arn}/CONTACT_TRACE_RECORDS/*
          - Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource:
             - !GetAtt rKMSKeyKinesisAmazonConnectContactTraceRecords.Arn
          - Effect: Allow
            Action:
              - kinesis:DescribeStream
              - kinesis:GetShardIterator
              - kinesis:GetRecords
              - kinesis:ListShards
            Resource:
              - !GetAtt rKinesisStreamAmazonConnectContactTraceRecords.Arn
  rIAMManagedPolicyAmazonConnectAgentEvents:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-agentevents-s3'
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload,
              - s3:GetBucketLocation,
              - s3:GetObject,
              - s3:ListBucket,
              - s3:ListBucketMultipartUploads,
              - s3:PutObject
            Resource: 
              - !Sub ${rS3BucketAmazonConnectAgentEvents.Arn}/AGENT_EVENTS/*
          - Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource:
             - !GetAtt rKMSKeyKinesisAmazonConnectAgentEvents.Arn
          - Effect: Allow
            Action:
              - kinesis:DescribeStream
              - kinesis:GetShardIterator
              - kinesis:GetRecords
              - kinesis:ListShards
            Resource:
              - !GetAtt rKinesisStreamAmazonConnectAgentEvents.Arn

## IAM Roles for Kinesis Firehose ##
  rIAMRoleKinesisFirehoseAmazonConnectContactTraceRecords:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-contacttracerecords-s3'
      Description: Allow Kinesis Firehose to write Contact Trace Records to S3
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - !Ref rIAMManagedPolicyAmazonConnectContactTraceRecords
  rIAMRoleKinesisFirehoseAmazonConnectAgentEvents:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-agentevents-s3'
      Description: Allow Kinesis Firehose to write Agent Events to S3
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - !Ref rIAMManagedPolicyAmazonConnectAgentEvents

## Kinesis Firehose Delivery Streams ##
  rKinesisFirehoseDeliveryStreamAmazonConnectContactTraceRecords:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-contacttracerecords-s3'
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration:
        KinesisStreamARN: !GetAtt rKinesisStreamAmazonConnectContactTraceRecords.Arn
        RoleARN: !GetAtt rIAMRoleKinesisFirehoseAmazonConnectContactTraceRecords.Arn
      S3DestinationConfiguration:
        BucketARN: !GetAtt rS3BucketAmazonConnectContactTraceRecords.Arn
        EncryptionConfiguration: 
          KMSEncryptionConfig:
            AWSKMSKeyARN: !GetAtt rKMSKeyKinesisFirehoseAmazonConnectContactTraceRecords.Arn
        Prefix: CONTACT_TRACE_RECORDS/
        RoleARN: !GetAtt rIAMRoleKinesisFirehoseAmazonConnectContactTraceRecords.Arn
  rKinesisFirehoseDeliveryStreamAmazonConnectAgentEvents:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub 'connect-${pEnvironment}-${pConnectInstanceName}-agentevents-s3'
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration:
        KinesisStreamARN: !GetAtt rKinesisStreamAmazonConnectAgentEvents.Arn
        RoleARN: !GetAtt rIAMRoleKinesisFirehoseAmazonConnectAgentEvents.Arn
      S3DestinationConfiguration:
        BucketARN: !GetAtt rS3BucketAmazonConnectAgentEvents.Arn
        EncryptionConfiguration: 
          KMSEncryptionConfig:
            AWSKMSKeyARN: !GetAtt rKMSKeyKinesisFirehoseAmazonConnectAgentEvents.Arn
        Prefix: AGENT_EVENTS/
        RoleARN: !GetAtt rIAMRoleKinesisFirehoseAmazonConnectAgentEvents.Arn

# Amazon Connect Instance #
## Amazon Connect Instance Creation ##
  rConnectInstance:
    Type: AWS::Connect::Instance
    Properties: 
      Attributes: 
        AutoResolveBestVoices: !Ref pConnectInstanceAttributeAutoResolveBestVoices
        ContactflowLogs: !Ref pConnectInstanceAttributeContactFlowLogs
        ContactLens: True
        EarlyMedia: True
        InboundCalls: True
        OutboundCalls: True
      IdentityManagementType: CONNECT_MANAGED
      InstanceAlias: !Sub '${pEnvironment}-${pConnectInstanceName}-${AWS::Region}'
    DeletionPolicy: "Retain"
    UpdateReplacePolicy : "Retain"

## Amazon Connect Instance Configuration ##
  rConnectInstanceStorageConfigCallRecordings:
    Type: AWS::Connect::InstanceStorageConfig
    Properties: 
      InstanceArn: !Ref rConnectInstance
      ResourceType: CALL_RECORDINGS
      S3Config: 
        BucketName: !Ref rS3BucketAmazonConnectCallRecordings
        BucketPrefix: CALL_RECORDINGS
        EncryptionConfig: 
            EncryptionType: KMS
            KeyId: !GetAtt 'rKMSKeyAmazonConnectCallRecordings.Arn'
      StorageType: S3
  rConnectInstanceStorageConfigChatTranscripts:
    Type: AWS::Connect::InstanceStorageConfig
    Properties: 
      InstanceArn: !Ref rConnectInstance
      ResourceType: CHAT_TRANSCRIPTS
      S3Config: 
        BucketName: !Ref rS3BucketAmazonConnectChatTranscripts
        BucketPrefix: CHAT_TRANSCRIPTS
        EncryptionConfig: 
            EncryptionType: KMS
            KeyId: !GetAtt 'rKMSKeyAmazonConnectChatTranscripts.Arn'
      StorageType: S3
  rConnectInstanceStorageConfigScheduledReports:
    Type: AWS::Connect::InstanceStorageConfig
    Properties: 
      InstanceArn: !Ref rConnectInstance
      ResourceType: SCHEDULED_REPORTS
      S3Config: 
        BucketName: !Ref rS3BucketAmazonConnectScheduledReports
        BucketPrefix: SCHEDULED_REPORTS
        EncryptionConfig: 
            EncryptionType: KMS
            KeyId: !GetAtt 'rKMSKeyAmazonConnectScheduledReports.Arn'
      StorageType: S3
  rConnectInstanceStorageConfigContactTraceRecords:
    Type: AWS::Connect::InstanceStorageConfig
    Properties: 
      InstanceArn: !Ref rConnectInstance
      ResourceType: CONTACT_TRACE_RECORDS
      StorageType: KINESIS_STREAM
      KinesisStreamConfig:
        StreamArn: !GetAtt rKinesisStreamAmazonConnectContactTraceRecords.Arn
  rConnectInstanceStorageConfigAgentEvents:
    Type: AWS::Connect::InstanceStorageConfig
    Properties: 
      InstanceArn: !Ref rConnectInstance
      ResourceType: AGENT_EVENTS
      StorageType: KINESIS_STREAM
      KinesisStreamConfig:
        StreamArn: !GetAtt rKinesisStreamAmazonConnectAgentEvents.Arn

Outputs:
  oConnectInstanceArn:
    Description: Amazon Connect Instance ARN
    Value:
      Ref: rConnectInstance
    Export:
      Name: !Sub ${AWS::StackName}-oConnectInstanceArn
  oS3BucketAmazonConnectCallRecordingsBucketName:
    Description: S3 Bucket Name for Amazon Connect Call Recordings
    Value:
      Ref: rS3BucketAmazonConnectCallRecordings
    Export:
      Name: !Sub ${AWS::StackName}-oS3BucketAmazonConnectCallRecordingsBucketName
  oS3BucketAmazonConnectChatTranscriptsBucketName:
    Description: S3 Bucket Name for Amazon Connect Chat Transcripts
    Value:
      Ref: rS3BucketAmazonConnectChatTranscripts
    Export:
      Name: !Sub ${AWS::StackName}-oS3BucketAmazonConnectChatTranscriptsBucketName
  oS3BucketAmazonConnectScheduledReportsBucketName:
    Description: S3 Bucket Name for Amazon Connect Scheduled Reports
    Value:
      Ref: rS3BucketAmazonConnectScheduledReports
    Export:
      Name: !Sub ${AWS::StackName}-oS3BucketAmazonConnectScheduledReportsBucketName
  oKinesisStreamAmazonConnectContactTraceRecordsStreamArn:
    Description: Kinesis Stream Name for Amazon Connect Contact Trace Records
    Value:
      Fn::GetAtt: 'rKinesisStreamAmazonConnectContactTraceRecords.Arn'
    Export:
      Name: !Sub ${AWS::StackName}-oKinesisStreamAmazonConnectContactTraceRecordsStreamName
  oKinesisStreamAmazonConnectAgentEventsStreamArn:
    Description: Kinesis Stream Name for Amazon Connect Agent Events
    Value:
      Fn::GetAtt: 'rKinesisStreamAmazonConnectAgentEvents.Arn'
    Export:
      Name: !Sub ${AWS::StackName}-oKinesisStreamAmazonConnectAgentEventsStreamName